<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:annotation-config/>

    <!-- Get the contributions from the modules -->
    <import resource="classpath*:/META-INF/mvc-showcase/*-beans-web.xml"/>


    <!-- Trigger MVC annotations on controllers -->
    <mvc:annotation-driven/>

    <!-- ================ static resource mapping overriding ================ -->

    <!-- Allows to serve static content with a mapping. Here anything that starts with static
         is redirected to the static directory -->
    <mvc:resources mapping="/static/**" location="/static/"/>

    <!-- Any html page at the root of the context is served from the root of the webapp -->
    <mvc:resources mapping="*.html" location="/"/>


    <!-- ================ Additional MVC endpoints discovery strategy ================ -->


    <!-- Adds a mapper that looks for the name of the bean. Make it do that as last resort -->
    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
        <property name="order" value="500"/>
    </bean>
    <!-- see http://stackoverflow.com/questions/3896013/no-adapter-for-handler-exception -->
    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>


    <!-- ================ Content negotiation and views resolvers ================ -->

    <bean id="contentNegotiatingViewResolver"
          class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="xml" value="application/xml"/>
                <entry key="json" value="application/json"/>
            </map>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <constructor-arg>
                        <bean class="org.springframework.oxm.xstream.XStreamMarshaller"/>
                    </constructor-arg>
                </bean>
            </list>
        </property>
        <property name="defaultContentType" value="application/xml" />
    </bean>

    <!--
       Configure the JSP view resolver. For instance the logical view
       'authors/show' will be mapped to 'WEB-INF/jsp/authors/show.jsp'

       The order is 2 so that we can get a chance to register other mappers before
       if we want to.
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="2"/>
    </bean>

</beans>